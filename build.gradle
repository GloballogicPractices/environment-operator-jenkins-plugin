buildscript {
    repositories {
      jcenter()
      maven {
        url 'http://repo.jenkins-ci.org/releases/'
      }
    }

    dependencies {
      classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.22.0'
      classpath 'org.jenkins-ci.plugins:job-dsl:1.61'
      classpath 'org.jenkins-ci.plugins:job-dsl-core:1.61'
    }
}

apply plugin: 'org.jenkins-ci.jpi'
apply plugin: 'jacoco'
apply plugin: 'codenarc'

group = "org.jenkins-ci.plugins"
version = "4.0.43-SNAPSHOT"    // Or whatever your version is.
description = "Pearson environment-operator deployer"

// sourceCompatibility = 1.6
// targetCompatibility = 1.6

// Add integration test sources
sourceSets {
  integrationTest {
    groovy {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integration-test/groovy')
    }
    resources.srcDir file('src/integration-test/resources')
  }
}

jenkinsPlugin {
  coreVersion = '2.32.1'                                               // Version of Jenkins core this plugin depends on.
  displayName = 'Pearson environment-operator deployer'
  url = 'http://wiki.jenkins-ci.org/display/JENKINS/SomePluginPage'   // URL for plugin on Jenkins wiki or elsewhere.
  gitHubUrl = 'https://github.com/jenkinsci/some-plugin'              // Plugin URL on GitHub. Optional.
  shortName = "environment-operator-deployer"

  pluginFirstClassLoader = true

   // The developers section is optional, and corresponds to the POM developers section.
  developers {
    developer {
      id 'geribatai'
      name 'Simas Cepaitis'
      email 'simas.cepaitis@snc.lt'
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
    html.destination "${buildDir}/reports/coverage"
  }
}

task integrationTest(type: Test) {
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath

  systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
  systemProperty "geb.env", "chrome"
  outputs.upToDateWhen { false }
}

tasks.withType(Test) {
  reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.7'
  compile 'org.apache.commons:commons-io:1.3.2'
  compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
	//compile 'org.jenkins-ci.plugins:job-dsl:1.61@jar'
  //compile 'org.jenkins-ci.plugins:job-dsl-core:1.61@jar'

  optionalJenkinsPlugins 'org.jenkins-ci.plugins:job-dsl:1.61@jar'
  optionalJenkinsPlugins 'org.jenkins-ci.plugins:job-dsl-core:1.61@jar'

  testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
  testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
  testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
  testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
  testCompile "org.mockito:mockito-core:1.+"

  integrationTestCompile "org.gebish:geb-spock:0.9.0"
  integrationTestCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.6"
  // integrationTestCompile "org.eclipse.jgit:org.eclipse.jgit:4.6.0.201612231935-r"
  // integrationTestCompile "com.jcraft:jsch.agentproxy.jsch:0.0.9"
  // integrationTestCompile "com.jcraft:jsch.agentproxy.usocket-jna:0.0.9"
  // integrationTestCompile "com.jcraft:jsch.agentproxy.sshagent:0.0.9"

  integrationTestCompile 'org.codehaus.groovy:groovy-backports-compat23:2.4.5'

}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileGroovy {
  options.encoding = 'UTF-8'
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
